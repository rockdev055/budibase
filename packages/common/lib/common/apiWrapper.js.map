{"version":3,"sources":["../../src/common/apiWrapper.js"],"names":["apiWrapper","app","eventNamespace","isAuthorized","eventContext","func","pushCallStack","handleNotAuthorized","startDate","Date","now","elapsed","publish","onBegin","params","result","publishComplete","publishError","apiWrapperSync","error","err","UnauthorisedError","seedCallId","callId","createCallStack","threadCallId","stack","calls","push","namespace","popCallStack","pop","length","ctx","onError","endcontext","onComplete"],"mappings":"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","sourcesContent":["import { cloneDeep, isUndefined } from \"lodash/fp\"\r\nimport { generate } from \"shortid\"\r\nimport { UnauthorisedError } from \"./errors\"\r\n\r\nexport const apiWrapper = async (\r\n  app,\r\n  eventNamespace,\r\n  isAuthorized,\r\n  eventContext,\r\n  func,\r\n  ...params\r\n) => {\r\n  pushCallStack(app, eventNamespace)\r\n\r\n  if (!isAuthorized(app)) {\r\n    handleNotAuthorized(app, eventContext, eventNamespace)\r\n    return\r\n  }\r\n\r\n  const startDate = Date.now()\r\n  const elapsed = () => Date.now() - startDate\r\n\r\n  try {\r\n    await app.publish(eventNamespace.onBegin, eventContext)\r\n\r\n    const result = await func(...params)\r\n\r\n    await publishComplete(app, eventContext, eventNamespace, elapsed, result)\r\n    return result\r\n  } catch (error) {\r\n    await publishError(app, eventContext, eventNamespace, elapsed, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nexport const apiWrapperSync = (\r\n  app,\r\n  eventNamespace,\r\n  isAuthorized,\r\n  eventContext,\r\n  func,\r\n  ...params\r\n) => {\r\n  pushCallStack(app, eventNamespace)\r\n\r\n  if (!isAuthorized(app)) {\r\n    handleNotAuthorized(app, eventContext, eventNamespace)\r\n    return\r\n  }\r\n\r\n  const startDate = Date.now()\r\n  const elapsed = () => Date.now() - startDate\r\n\r\n  try {\r\n    app.publish(eventNamespace.onBegin, eventContext)\r\n\r\n    const result = func(...params)\r\n\r\n    publishComplete(app, eventContext, eventNamespace, elapsed, result)\r\n    return result\r\n  } catch (error) {\r\n    publishError(app, eventContext, eventNamespace, elapsed, error)\r\n    throw error\r\n  }\r\n}\r\n\r\nconst handleNotAuthorized = (app, eventContext, eventNamespace) => {\r\n  const err = new UnauthorisedError(`Unauthorized: ${eventNamespace}`)\r\n  publishError(app, eventContext, eventNamespace, () => 0, err)\r\n  throw err\r\n}\r\n\r\nconst pushCallStack = (app, eventNamespace, seedCallId) => {\r\n  const callId = generate()\r\n\r\n  const createCallStack = () => ({\r\n    seedCallId: !isUndefined(seedCallId) ? seedCallId : callId,\r\n    threadCallId: callId,\r\n    stack: [],\r\n  })\r\n\r\n  if (isUndefined(app.calls)) {\r\n    app.calls = createCallStack()\r\n  }\r\n\r\n  app.calls.stack.push({\r\n    namespace: eventNamespace,\r\n    callId,\r\n  })\r\n}\r\n\r\nconst popCallStack = app => {\r\n  app.calls.stack.pop()\r\n  if (app.calls.stack.length === 0) {\r\n    delete app.calls\r\n  }\r\n}\r\n\r\nconst publishError = async (\r\n  app,\r\n  eventContext,\r\n  eventNamespace,\r\n  elapsed,\r\n  err\r\n) => {\r\n  const ctx = cloneDeep(eventContext)\r\n  ctx.error = err\r\n  ctx.elapsed = elapsed()\r\n  await app.publish(eventNamespace.onError, ctx)\r\n  popCallStack(app)\r\n}\r\n\r\nconst publishComplete = async (\r\n  app,\r\n  eventContext,\r\n  eventNamespace,\r\n  elapsed,\r\n  result\r\n) => {\r\n  const endcontext = cloneDeep(eventContext)\r\n  endcontext.result = result\r\n  endcontext.elapsed = elapsed()\r\n  await app.publish(eventNamespace.onComplete, endcontext)\r\n  popCallStack(app)\r\n  return result\r\n}\r\n\r\nexport default apiWrapper\r\n"],"file":"apiWrapper.js"}