{"version":3,"sources":["../../src/schema/createActions.js"],"names":["createTrigger","actionName","eventName","optionsCreator","condition","createAction","name","behaviourSource","behaviourName","initialOptions"],"mappings":"iIAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,WAAO;AAClCC,IAAAA,UAAU,EAAE,EADsB;AAElCC,IAAAA,SAAS,EAAE,EAFuB;AAGlC;AACA;AACA;AACAC,IAAAA,cAAc,EAAE,EANkB;AAOlC;AACA;AACAC,IAAAA,SAAS,EAAE,EATuB,EAAP,EAAtB,C;;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,WAAO;AACjCC,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,eAAe,EAAE,EAFgB;AAGjC;AACAC,IAAAA,aAAa,EAAE,EAJkB;AAKjC;AACA;AACA;AACAC,IAAAA,cAAc,EAAE,EARiB,EAAP,EAArB,C","sourcesContent":["export const createTrigger = () => ({\r\n  actionName: \"\",\r\n  eventName: \"\",\r\n  // function, has access to event context,\r\n  // returns object that is used as parameter to action\r\n  // only used if triggered by event\r\n  optionsCreator: \"\",\r\n  // action runs if true,\r\n  // has access to event context\r\n  condition: \"\",\r\n})\r\n\r\nexport const createAction = () => ({\r\n  name: \"\",\r\n  behaviourSource: \"\",\r\n  // name of function in actionSource\r\n  behaviourName: \"\",\r\n  // parameter passed into behaviour.\r\n  // any other parms passed at runtime e.g.\r\n  // by trigger, or manually, will be merged into this\r\n  initialOptions: {},\r\n})\r\n"],"file":"createActions.js"}