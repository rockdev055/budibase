const headers = () => [
    {
        name: "common/H1",
        description: "Header 1",
        inherits: "@budibase/standard-components/text",
        props: {
            font: "20pt",
        }
    },
    {
        name: "common/H2",
        description: "Header 2",
        inherits: "@budibase/standard-components/text",
        props: {
            font: "15pt",
        }
    },
    {
        name: "common/H3",
        description: "Header 3",
        inherits: "@budibase/standard-components/text",
        props: {
            font: "12pt bold",
        }
    },
    {
        name: "common/H4",
        description: "Header 4",
        inherits: "@budibase/standard-components/text",
        props: {
            font: "10pt bold",
        }
    }
];

const forms = ({records, indexes}) => 
    [...headers(),
    ...records.map(root)];

const root = record => ({
    name: `${record.name} Form`,
    description: `All fields on record '${record.nodeKey()}' `,
    inherits: "@budibase/standard-components/stackpanel",
    props: {
        direction: "vertical",
        children: [
            {
                control: {
                    _component: "common/H1",
                    value: `Edit ${record.name}`,
                }
            },
            form(record),
            saveCancelButtons(record)
        ]
    }
}); 

const form = record => ({
    control: {
        _component: "@budibase/standard-components/form",
        formControls: 
            record.fields.map(f => ({
                label: f.label,
                control: {
                    _component: "@budibase/standard-components/textbox",
                    value: {
                        "##bbstate":`current${record.name}.${f.name}`,
                        "##bbsource":"store"
                    }
                }
            }))
    }
});

const saveCancelButtons = (record) => ({
    control: {
        _component: "@budibase/standard-components/stackpanel",
        direction: "horizontal",
        children: [
            paddedPanelForButton({
                _component: "common/Primary Button",
                contentText: `Save ${record.name}`,
                onClick: [                
                    {
                        "##eventHandlerType": "Save Record",
                        parameters: {
                            statePath: `current${record.name}`,
                        }
                    }
                ]
            }),
            paddedPanelForButton({
                _component: "common/Secondary Button",
                contentText: `Cancel`,
                onClick: [
                    {
                        "##eventHandlerType": "Save Record",
                        parameters: {
                            statePath: `current${record.name}`,
                        }
                    }
                ]
            })
        ]
    }
});

const paddedPanelForButton = (button) => ({
    control: {
        _component: "@budibase/standard-components/panel",
        padding: "20px",
        component: button
    }
});

const indexTables = ({indexes, helpers}) => 
    indexes.filter(i => i.parent().type === "root")
           .map(i => indexTable(i, helpers));

const indexTableProps = (index, helpers) => ({
    data: {
        "##bbstate":index.nodeKey(),
        "##bbsource":"store"
    },
    columns: helpers.indexSchema(index).map(column)
});

const indexTable = (index, helpers) => ({
    name: `tables/${index.name} Table`,
    inherits: "@budibase/standard-components/table",
    props: indexTableProps(index, helpers)
});

const column = (col) => ({
    title: col.name,
    value: {
        "##bbstate": col.name,
        "##bbsource":"context"
    }
});

const nav = ({records, indexes, helpers}) => [
    {
        name: "Application Root",
        inherits: "@budibase/standard-components/nav",
        props: {
            items: indexes
                    .filter(i => i.parent().type === "root")
                    .map(navItem),
            selectedItem: {
                "##bbstate": "selectedNav",
                "##bbstatefallback": records[0].collectionName,
                "##bbsource":"store"
            }
        },
    },
    ...indexTables({records, indexes, helpers})
];


const navItem = (index) => ({
    title: index.name,
    component : {
        _component: `tables/${index.name} Table`
    }
});

const app = (params) => {

    return [
        ...nav(params),
        ...forms(params)
    ];
};

const buttons = () => [
    {
        name: "common/Primary Button",
        description: "a styled button",
        inherits: "@budibase/standard-components/button",
        props: {
            padding: "5px 7px",
            border: "1px solid #EEE",
            color: "#5F6368",
            background: "##f2f2f2",
            hoverColor: "black",
            hoverBackground: "#cccccc"
        }
    },
    {
        name: "common/Secondary Button",
        description: "a styled button",
        inherits: "@budibase/standard-components/button",
        props: {
            padding: "5px 7px",
            border: "1px solid #EEE",
            color: "#5F6368",
            background: "##f2f2f2",
            hoverColor: "black",
            hoverBackground: "#cccccc"
        }
    }
];

export { app, buttons, forms, headers, indexTables, nav };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
